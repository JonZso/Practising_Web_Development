// Generated by CoffeeScript 1.11.0
(function() {
  var Animal, Horse, Snake, csOutput, name, sam, tom,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  name = "Classes, Inheritance and Super.";

  csOutput = document.getElementById("csoutput");

  csOutput.insertAdjacentHTML('beforeend', "Welcome to " + name);

  Animal = (function() {
    function Animal(name1, food) {
      this.name = name1;
      this.food = food;
    }

    Animal.prototype.move = function(noise) {
      return alert(this.name + (" Makes noise {super: " + noise + "} and likes to eat   >>>") + this.food);
    };

    return Animal;

  })();

  Snake = (function(superClass) {
    extend(Snake, superClass);

    function Snake() {
      return Snake.__super__.constructor.apply(this, arguments);
    }

    Snake.prototype.move = function() {
      return Snake.__super__.move.call(this, "Sss");
    };

    return Snake;

  })(Animal);

  Horse = (function(superClass) {
    extend(Horse, superClass);

    function Horse() {
      return Horse.__super__.constructor.apply(this, arguments);
    }

    Horse.prototype.move = function() {
      return Horse.__super__.move.call(this, "Nehh");
    };

    Horse.prototype.sing = function() {
      return alert("woohooo!");
    };

    return Horse;

  })(Animal);

  sam = new Snake("Sammy the Python");

  tom = new Horse("Tommy the Palomino", "breadsticks");

  sam.move();

  tom.move();

  tom.sing();

}).call(this);
